/*------------------------------------*\
    $MIXINS
\*------------------------------------*/

/* CSS Transition
  Usage: @include transition(width,0.3s,ease-out);
 */

// Transition
@mixin transition($transition-property, $transition-time, $method) {
  transition: $transition-property $transition-time $method;
}

// Transform
@mixin transform($val) {
  transform: $val;
}

// Rotate
@mixin rotate($deg) {
  @include transform(rotate(#{$deg}deg));
}

// Horizontal rule
@mixin rule-horizontal($width, $color, $style) {
  border-top: $width $color $style;
}

// Horizontal rule
@mixin rule-horizontal-bottom($width, $color, $style) {
  border-bottom: $width $color $style;
}

// Vertical rule
@mixin rule-vertical($width, $color, $style) {
  border-left: $width $color $style;
}


/**
 * Clearfix Mixin
 * Applies a clearfix ruleset using a placeholder selector. Placeholder selectors
 * do not get compiled uless they are called - removing the nesting issues that
 * can otherwise occur with extends.
 */

.clearfix,
%clearfix {
  &:after {
    content: "";
    display: table;
    clear: both;
  }
}

// Additional layout mixins.

// Switches direction from row to column.
@mixin grid--direction-col() {
  .flexbox & {
    flex-direction: column;
  }
}

// Adds equal space between items.
@mixin grid--justify-between() {
  .flexbox & {
    justify-content: space-between;
  }
}

// For patterns that are flex-direction: column, ensure
// the appropriate top margins between them. The other half
// of the gutter should be provided by the top margin of
// the first child element.
@mixin child-top-gutters($height) {
  > * {
  //> *:nth-child(n + 2) > *:nth-child(n + 2) {
    margin-top: $gutter-mobile / 2;

    @include breakpoint($bp-med) {
      margin-top: $gutter / 2;
    }
  }
}